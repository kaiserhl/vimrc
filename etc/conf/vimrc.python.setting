"===============================================================================
" vimrc python configuration
"===============================================================================

augroup python_general
	autocmd!

	" fix the issues insert mode of comments go to start of line 
	autocmd FileType python setl nosmartindent
	autocmd BufEnter *.py set ai sw=4 ts=4 et fo=croql
augroup END

"===============================================================================
" VARIOUS PLUGIN CONFIGURATIONS
"===============================================================================

"---------------------------------------
" support ctags
"---------------------------------------
augroup python_ctags
	autocmd!
"	autocmd BufWritePost *.py silent! !ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
augroup END

"---------------------------------------
" pythondiction.vim
"---------------------------------------
let g:pydiction_location = '~/.vim/ftplugin/pydiction/complete-dict'

"---------------------------------------
" Tab completion and Documentation
"---------------------------------------
augroup python_pl_tab_completion
	autocmd!
	autocmd FileType python set omnifunc=pythoncomplete#Complete
augroup END

let g:SuperTabDefaultCompletionType = "context"

"---------------------------------------
" Pyflakes
"---------------------------------------
let g:pyflakes_use_quickfix = 0

"---------------------------------------
" Pep8
"---------------------------------------
"let g:pep8_map='<leader>8'

"---------------------------------------
" Rope Refactoring and go to definition
"---------------------------------------
"map <leader>j :RopeGotoDefinition<CR>
"map <leader>r :RopeRename<CR>

"---------------------------------------
" Ack
"---------------------------------------
"nmap <leader>a <Esc>:Ack!

"---------------------------------------
" py.test
"---------------------------------------
" Execute the tests py.test
"nmap <silent><Leader>tf <Esc>:Pytest file<CR>
"nmap <silent><Leader>tc <Esc>:Pytest class<CR>
"nmap <silent><Leader>tm <Esc>:Pytest method<CR>

" cycle through test errors
"nmap <silent><Leader>tn <Esc>:Pytest next<CR>
"nmap <silent><Leader>tp <Esc>:Pytest previous<CR>
"nmap <silent><Leader>te <Esc>:Pytest error<CR>


"===============================================================================
" Miscellaneous
"===============================================================================

"---------------------------------------
" Add the virtualenv's site-packages to vim path
"---------------------------------------
"python << EOF
"import os.path
"import sys
"import vim
"if 'VIRTUAL_ENV' in os.environ:
"    project_base_dir = os.environ['VIRTUAL_ENV']
"    sys.path.insert(0, project_base_dir)
"    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"    execfile(activate_this, dict(__file__=activate_this))
"EOF
