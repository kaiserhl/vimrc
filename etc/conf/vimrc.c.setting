"===============================================================================
" vimrc cvim setting
"===============================================================================
hi BadWhiteSpace ctermbg=red
autocmd BufEnter *.h,*.cc,*.py match BadWhiteSpace /\s\+$/

augroup c_general
	autocmd!
	set completeopt=menu,menuone
	" always use space instead of tab
	autocmd FileType cpp,c set ai sw=2 ts=2 et fo=croql
	autocmd FileType cmake set ai sw=2 ts=2 et fo=croql
	autocmd FileType python setl nosmartindent
	autocmd BufEnter *.py set ai sw=4 ts=4 et fo=croql
	autocmd BufEnter *.proto set ai sw=4 ts=4 et fo=croql
	autocmd BufEnter *.tex set ai sw=4 ts=4 et fo=croql
augroup END

"===============================================================================
" VARIOUS PLUGIN CONFIGURATIONS
"===============================================================================

"---------------------------------------
" ctags 
"---------------------------------------
augroup c_pl_ctags
	autocmd!
	"set tags+=~/.vim/tags/std3.3.tags
	autocmd BufWritePost *.c,*.cc,*.cpp,*.h silent! !ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
augroup END

"---------------------------------------
" OmniCPP complete
"
" consider clang plugin http://www.vim.org/scripts/script.php?script_id=3302
" which does not require ctags
"---------------------------------------
augroup c_pl_omnicpp
	autocmd!
	autocmd InsertLeave * if pumvisible() == 0|pclose|endif
augroup END

let g:OmniCpp_GlobalScopeSearch = 0

" be very careful with 2; because it could cause vim run extremely slow 
" depend on the size of its included files
"
" 2: search namespaces in this and included files XXX
" 1: search current file 
let g:OmniCpp_NamespaceSearch = 1 		
let g:OmniCpp_DisplayMode = 1 			" always show all members 

let g:OmniCpp_ShowScopeInAbbr = 1
let g:OmniCpp_ShowPrototypeInAbbr = 1 	" show function prototype in popup window
let g:OmniCpp_ShowAccess = 1 			" show accessbility 

let g:OmniCpp_MayCompleteDot = 1 		" autocomplete with .
let g:OmniCpp_MayCompleteArrow = 1 		" autocomplete with ->
let g:OmniCpp_MayCompleteScope = 1 		" autocomplete with ::

let g:OmniCpp_SelectFirstItem = 2 		" select first item (but don't insert)
let g:OmniCpp_LocalSearchDecl = 1 		" user local search function

"----------------------------------------
" DoxygenToolkit
"----------------------------------------
let g:DoxygenToolkit_commentType = "C++" 
let g:DoxygenToolkit_compactDoc = "yes" " compact doxygen

